{"version":3,"sources":["helpers/swal/sawl.js","factory/storage/index.js","factory/requestor/requestor.js","assets/logo.png","modules/register/student/student.jsx"],"names":["Swal","title","text","operation","className","buttons","callback","callback2","context","swal","icon","onConfirm","then","botoes","LocalStorage","data","localStorage","setItem","btoa","status","JSON","stringify","dados","aux","atob","getItem","parse","clear","Requestor","props","this","token","undefined","baseURL","dataUserLogged","getStorage","myHeaders","Headers","append","urlG","options","method","headers","getHeaders","fetch","urlP","formData","body","urlD","module","exports","RegisterStudent","state","name","userName","email","password","cpassword","requestExecutor","event","key","submitData","validate","alertMessage","indexOf","FormData","post","response","json","result","history","push","msg","catch","error","console","log","src","Logo","alt","type","placeholder","onKeyUp","onKeyDown","bind","onChange","e","setState","target","value","onClick","to","React","Component"],"mappings":"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","file":"static/js/10.ff7a0e02.chunk.js","sourcesContent":["import swal from 'sweetalert';\nimport \"./swal.css\"\n\nexport default class Swal{\n    \n    static alertMessage(title = \"\",text = \"\",operation = \"\",className = \"\", buttons = {}, callback = function(){}, callback2 = function(){}, context = {}){\n        swal({\n            title: title,\n            text: text,\n            icon: operation,\n            className: className,\n            buttons: buttons,\n            onConfirm: () => callback\n        })\n        .then((botoes) => {\n            if (botoes == \"Sim\" || botoes == \"Ok\")  {\n                callback2(context)\n            }\n        });\n    }\n}","export default class LocalStorage{\n\n    static setStorage(data){\n        localStorage.setItem(btoa('statusUser'), btoa(data.status));\n        localStorage.setItem(btoa('dataUser'), btoa(JSON.stringify((data.dados))));\n    }\n\n    static getStorage(){\n        let aux = atob(localStorage.getItem(btoa('dataUser')));     \n        return JSON.parse(aux);\n    }\n    \n    static clearStorage(){\n        localStorage.clear();\n    }    \n}\n","import LocalStorage from '../../factory/storage/index';\nexport  class Requestor{\n\n    constructor(props){\n        this.token = (props == undefined || props == null) ? true : false\n        // this.baseURL = `http://127.0.0.1:82`;\n        this.baseURL = `https://b1085189c6b5.ngrok.io`;\n        if (this.token) {\n            this.dataUserLogged = LocalStorage.getStorage();\n        }\n    }\n    \n    getHeaders(){\n        let myHeaders = new Headers();\n        if (this.token) {\n            myHeaders.append(\"Authorization\", `${this.dataUserLogged.token}`);\n        }\n        return myHeaders;\n    }\n\n    get(urlG){\n        let options = {\n            method: 'GET',\n            headers: this.getHeaders(),\n        }\n        return fetch(`${this.baseURL}/${urlG}`,options);\n    }\n\n    post(urlP,formData){\n        let options = {\n            method: \"POST\",\n            headers: this.getHeaders(),\n            body:formData\n        }       \n\n        return fetch(`${this.baseURL}/${urlP}`, options)\n    }\n\n    delete(urlD){\n        let options = {\n            method: 'DELETE',\n            headers: this.getHeaders(),\n        }\n\n        return fetch(`${this.baseURL}/${urlD}`,options);\n    }\n}","module.exports = __webpack_public_path__ + \"static/media/logo.8ab4c88e.png\";","import './student.css';\nimport '../register.css';\n\nimport React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport Swal from '../../../helpers/swal/sawl';\nimport Logo from '../../../assets/logo.png';\nimport { Requestor } from \"../../../factory/requestor/requestor\";\n\nexport default class RegisterStudent extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            userName: '',\n            email: '',\n            password: '',\n            cpassword: ''\n        };\n        this.requestExecutor = new Requestor(false);\n    }\n\n    onKeyDown(event){\n        if (event.key === 'Enter') {\n            this.submitData()\n          }   \n    }\n    submitData() {\n        const { name, userName, email, password, cpassword } = this.state;\n        let validate = true;\n      \n        if (!name || !userName || !email || !password || !cpassword) {\n            validate = false;\n            Swal.alertMessage('Erro!', 'Preencha todos os campos', 'error');\n            // deixar o campos vazios  em vemrelho\n        };\n\n        if(email.indexOf('@') === -1) {\n            validate = false;\n            Swal.alertMessage('Erro!', 'E-mail inválido', 'error');\n        }\n\n        if (password !== cpassword) {\n            validate = false;\n            Swal.alertMessage('Erro!', 'Senhas não conferem', 'error');\n            // fazer função para validar segurança\n        };\n        \n        if (validate) {\n            let formData = new FormData()\n            formData.append(\"email_usuario\",email)\n            formData.append(\"senha_usuario\", password)\n            formData.append(\"nick_usuario\", userName)\n            formData.append(\"descricao_usuario\", name)\n\n            this.requestExecutor.post('usuario', formData)\n            .then(response => response.json())\n            .then(result => {\n                if (result.status == true) {\n                    Swal.alertMessage('Sucesso!', 'Cadastro realizado', 'success', this.props.history.push('/'));\n                }else{\n                    Swal.alertMessage('Erro!', result.msg, 'warning');\n                }\n            })\n            .catch(error => console.log('error', error));\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <section  className=\"box container__body \">\n                    <div className=\"box__left\">\n                        <img src={Logo} alt=\"Logo do sistema\" />\n                    </div>\n                    <div className=\"box__right\">\n                        <form className=\"form\">\n                            <input className=\"input__register\" type=\"text\" placeholder=\"Nome completo\" onKeyUp={this.onKeyDown.bind(this)}  onChange={(e) => this.setState({ name: e.target.value })} />\n                            <input className=\"input__register\" type=\"text\" placeholder=\"Nome de usuário(Apelido)\" onKeyUp={this.onKeyDown.bind(this)}  onChange={(e) => this.setState({ userName: e.target.value })} />\n                            <input className=\"input__register\" type=\"email\" placeholder=\"E-mail\" onKeyUp={this.onKeyDown.bind(this)}  onChange={(e) => this.setState({ email: e.target.value })} />\n                            <input className=\"input__register\" type=\"password\" placeholder=\"Digite sua senha\" onKeyUp={this.onKeyDown.bind(this)}  onChange={(e) => this.setState({ password: e.target.value })} />\n                            <input className=\"input__register\" type=\"password\" placeholder=\"Confirmar senha\" onKeyUp={this.onKeyDown.bind(this)}  onChange={(e) => this.setState({ cpassword: e.target.value })} />\n\n                            <div className=\"btns\">\n                                <button type=\"button\" className=\"button__register\" onClick={this.submitData.bind(this)} >Cadastrar</button>\n                                <Link to=\"/\">\n                                    <button type=\"button\" className=\"button__register\">Cancelar</button>\n                                </Link>\n                            </div>\n                        </form>\n                    </div>\n                </section>\n            </>\n        )\n    }\n}"],"sourceRoot":""}